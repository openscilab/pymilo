# -*- coding: utf-8 -*-
"""PyMilo CFnode(from sklearn.cluster._birch) object transporter."""
from sklearn.cluster._birch import _CFNode

from .transporter import AbstractTransporter
from .general_data_structure_transporter import GeneralDataStructureTransporter


class CFNodeTransporter(AbstractTransporter):
    """Customized PyMilo Transporter developed to handle CFnode object."""

    def __init__(self):
        self.all_cfnodes = set()
        self.retrieved_cfnodes = {}

    def serialize(self, data, key, model_type):
        """
        Serialize data[key] if it is an instance of _CFNode.

        :param data: the internal data dictionary of the given model
        :type data: dict
        :param key: the special key of the data param, which we're going to serialize its value(data[key])
        :type key: object
        :param model_type: the model type of the ML model
        :type model_type: str
        :return: pymilo serialized output of data[key]
        """
        self.all_cfnodes = set()
        if isinstance(data[key], _CFNode):
            data[key] = self.serialize_cfnode(data[key], GeneralDataStructureTransporter())
        return data[key]

    def deserialize(self, data, key, model_type):
        """
        Deserialize data[key] if it is a pymilo serialized _CFNode object.

        :param data: the internal data dictionary of the associated JSON file of the ML model generated by pymilo export.
        :type data: dict
        :param key: the special key of the data param, which we're going to deserialize its value(data[key])
        :type key: object
        :param model_type: the model type of the ML model
        :type model_type: str
        :return: pymilo deserialized output of data[key]
        """
        self.retrieved_cfnodes = {}
        content = data[key]
        if isinstance(content, dict) and "pymilo_model_type" in content and content["pymilo_model_type"] == "_CFNode":
            return self.deserialize_cfnode(content, GeneralDataStructureTransporter())
        else:
            return content
        
